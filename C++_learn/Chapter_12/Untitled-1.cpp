#include<iostream>
#include".h\Chapter_12.h"
using namespace std;
using namespace U_1;
int main(void)
{
	//类继承
    //从已知的类派生出新的类，而派生的类继承了原有的类的特征和方法

    //可以通过继承完成的部分工作：
    //已有类基础上添加功能
    //给类添加数据
    //修改类方法的行为

    //创建派生类对象时，程序首先调用基类构造函数，然后在调用派生类构造函数
    //基类构造函数负责初始化继承的数据成员，派生类主要用于初始化新增的数据成员
    //派生类对象过期时，程序将首先调用派生类析构函数，再调用基类析构函数

    test_1 A(3,2,"Yinlianlei");
	A.show();
    test_2 B("girl","yinlianlei",2,3);//此句将会对基类进行初始化
    B.show();//若是与基类的函数重名，优先使用派生类的
    test_1 &C=B;
    test_1 *D=&B;
    C.show();
    D->show();
    //基类指针可以再不进行显示类型转换的情况下指向派生类对象
    //基类引用可以再不进行显示转换的情况下引用派生类对象

    //基类指针或引用智能调用基类方法，无法使用派生类的方法
    //不可以将基类对象和地址给派生类引用和指针

    //对于一个基类的引用，可以指向基类对象或派生类对象
    //对于形参尾指向基类的指针的函数，也可以如此
    //引用兼容属性也可以将基类对象初始化尾派生类对象//隐式构造函数调用实现
	return 0;
}
